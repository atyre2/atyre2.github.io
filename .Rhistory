?root
?solve
?find.root
library(rootSolve)
install.packages("rootSolve")
library(rootSolve)
?uniroot.all
dN_Ndt <- function(N, a, h, P, d1, d2, b1, b2){
f2 = (a*P)/(1+a*h*N)
d = d1 + d2*N
f2_d = f2 + d
b = b1 + b2*N
}
roots <- uniroot.all(dN_Ndt, c(1,100) )
roots <- uniroot.all(dN_Ndt, c(1,100), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
dN_Ndt(10, a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2)
debug(dN_Ndt)
dN_Ndt(10, a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2)
a
P
h
N
f2
d
f2_d
dN_Ndt <- function(N, a, h, P, d1, d2, b1, b2){
f2 = (a*P)/(1+a*h*N)
d = d1 + d2*N
f2_d = f2 + d
b = b1 + b2*N
return(b - f2_d)
}
dN_Ndt(10, a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2)
roots <- uniroot.all(dN_Ndt, c(1,100), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
equilibria <- data.frame(N = roots)
equilibria <- mutate(e = b1 + b2*N)
equilibria <- mutate(equilibria, e = b1 + b2*N)
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(data=equilibria)
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal")
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), data=equilibria)
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), data=equilibria, linetype = 1)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response)) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), data=equilibria)
?annotate
?geom_text
equilibria <- data.frame(N = roots, label = c("Pit","K"))
equilibria <- mutate(equilibria, e = b1 + b2*N)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response)) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 2, data=equilibria) +
geom_text(aes(x=N, y = e, label=label), size = 2, data=equilibria, show.legend = FALSE)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response)) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 2, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
size = 3, data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.01, 0.01),
show.legend = FALSE)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response)) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 2, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
size = 12, data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response)) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 2, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE)
?geom_line
equilibria <- data.frame(N = roots, label = c("Pit","K"))
equilibria <- mutate(equilibria, e = b1 + b2*N)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 2) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 2, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE) +
geom_segment(aes(x = N, y = e, xend = 0, yend = e), data = equilibria[1,],arrow = arrow(length = unit(0.1,"cm")))
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE) +
geom_segment(aes(x = N, y = e, xend = 0, yend = e), data = equilibria[1,],arrow = arrow(length = unit(0.5,"cm")))
?render_jekyll
a <- 0.1
h <- 0.3
P <- 1
d1 <- 0.05
d2 <- 0.0005
df <- data.frame(N = 1:100)
df <- mutate(df,
f2 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f2_d = f2 + d) %>%
gather(response, e, -N)
library(dplyr)
library(ggplot2)
library(tidyr)
library(rootSolve)
df <- mutate(df,
f2 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f2_d = f2 + d) %>%
gather(response, e, -N)
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita death rate") +
scale_linetype_discrete(name = element_blank(), labels = c("Competition","Predation","Competition + Predation")) +
theme(legend.position = "bottom", legend.box = "horizontal")
?geom_vline
df2 <- data.frame(N = sqrt(1/(a*h)))
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita death rate") +
scale_linetype_discrete(name = element_blank(), labels = c("Competition","Predation","Competition + Predation")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_vline(aes(xintercept = N), data=df2)
df2 <- data.frame(N = sqrt(1/(a*h)),
f3 = a*sqrt(1/(a*h)/2))
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita death rate") +
scale_linetype_discrete(name = element_blank(), labels = c("Competition","Predation","Competition + Predation")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_vline(aes(xintercept = N), data=df2) +
geom_hline(aes(yintercept = f3), data=df2)
df2 <- data.frame(N = sqrt(1/(a*h)),
f3 = a*sqrt(1/(a*h))/2)
ggplot(df, aes(x = N, y = e, linetype = response)) +
geom_line() +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita death rate") +
scale_linetype_discrete(name = element_blank(), labels = c("Competition","Predation","Competition + Predation")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_vline(aes(xintercept = N), data=df2) +
geom_hline(aes(yintercept = f3), data=df2)
dN_Ndt <- function(N, a, h, P, d1, d2, b1, b2){
f3 = (a*N*P)/(1+a*h*N^2)
d = d1 + d2*N
f3_d = f3 + d
b = b1 + b2*N
return(b - f3_d)
}
a <- 0.1
h <- 0.5
P <- 1
d1 <- 0.05
d2 <- 0.0005
b1 <- 0.12
b2 <- -0.0002
df <- mutate(df,
f3 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f3_d = f3 + d,
b = b1 + b2*N) %>%
gather(response, e, -N, -f3, -d, f3_d, b)
roots <- uniroot.all(dN_Ndt, c(1,100), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
roots <- uniroot.all(dN_Ndt, c(0,100), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
equilibria <- data.frame(N = roots, label = c("Pit","K"))
equilibria <- mutate(equilibria, e = b1 + b2*N)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE) +
geom_segment(aes(x = N, y = e, xend = 0, yend = e), data = equilibria[1,],arrow = arrow(length = unit(0.5,"cm")))
df
df <- data.frame(N = 0:100)
df <- mutate(df,
f3 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f3_d = f3 + d,
b = b1 + b2*N)
df
df <- mutate(df,
f3 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f3_d = f3 + d,
b = b1 + b2*N) %>%
gather(response, e, -N, -f3, -d, f3_d, b)
equilibria
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal()
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal")
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE)
a <- 0.1
h <- 0.5
P <- 1
d1 <- 0.05
d2 <- 0.0005
b1 <- 0.14
b2 <- -0.0002
df <- data.frame(N = 0:100)
df <- mutate(df,
f3 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f3_d = f3 + d,
b = b1 + b2*N) %>%
gather(response, e, -N, -f3, -d, f3_d, b)
roots <- uniroot.all(dN_Ndt, c(0,100), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
roots <- uniroot.all(dN_Ndt, c(0,200), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
b2 <- -0.0003
df <- data.frame(N = 0:100)
df <- mutate(df,
f3 = (a*N*P)/(1+a*h*N^2),
d = d1 + d2*N,
f3_d = f3 + d,
b = b1 + b2*N) %>%
gather(response, e, -N, -f3, -d, f3_d, b)
roots <- uniroot.all(dN_Ndt, c(0,200), a = a, h = h, P = P, d1 = d1, d2 = d2, b1 = b1, b2 = b2 )
roots
equilibria <- data.frame(N = roots, label = c("Floor","Pit","K"))
equilibria <- mutate(equilibria, e = b1 + b2*N)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(2,0), nudge_y = c(0.003, 0.003),
show.legend = FALSE)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(3,0,0), nudge_y = c(0.01),
show.legend = FALSE)
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(3,0,0), nudge_y = c(0.01),
show.legend = FALSE) +
geom_segment(aes(x = N, y = e, xend = 0, yend = e), data = equilibria[1,],arrow = arrow(length = unit(0.5,"cm")))
ggplot(df, aes(x = N, y = e)) +
geom_line(aes(linetype = response), size = 1) +
theme_minimal() +
xlab("Population Size") +
ylab("Per capita rates") +
scale_linetype_discrete(name = element_blank(), labels = c("Birth rate", "Death rate")) +
theme(legend.position = "bottom", legend.box = "horizontal") +
geom_point(aes(x=N, y = e), size = 3, data=equilibria) +
geom_text(aes(x=N, y = e, label=label),
data=equilibria,
nudge_x = c(3,0,0), nudge_y = c(0.01),
show.legend = FALSE) +
geom_segment(aes(x = N, y = e, xend = 0, yend = e), data = equilibria[2,],arrow = arrow(length = unit(0.5,"cm")))
equilibria
?spread
arrows <- spread(equilbria, label)
arrows <- spread(equilbria, label, N)
arrows <- spread(equilibria, label, N)
arrows
class(arrows)
matrix(c(" ","Observation","Experiment","Prediction","Cross Validation","*","Hypothesis Testing","AIC","Backwards Selection"),nrow=3,ncol=3)
?print.xtable
library(xtable)
?print.xtable
knitr::knit("_drafts/model-selection-the-easy-problem.Rmd","_drafts/model-selection-the-easy-problem.md")
knitr::knit("_drafts/model-selection-the-easy-problem.Rmd","_drafts/model-selection-the-easy-problem.md")
data = matrix(c(" ","Observation","Experiment","Prediction","Cross Validation","*","Hypothesis Testing","AIC","Backwards Selection"),nrow=3,ncol=3)
data
make.data=function(C=c(2,1,0.5,0.25,0),N,re = 1){
X = matrix(rnorm(length(C)*N),nrow=N)
Ypred = X %*% C
Y = rnorm(N,Ypred,re)
data=data.frame(Y,X)
names(data)[2:(length(C)+1)] = paste("X.",1:length(C),sep="")
return(data)
}
N=64
baseline=c(0.5,0.3667,0.233,0.1,0)
data1 = make.data(baseline,N=N)
pairs(data1,pch=19,col=rgb(0.2,0.2,0.2,0.2))
set.seed(234561)
results = matrix(NA,nrow=1000,ncol=6)
for (i in 1:1000){
test.lm = lm(Y~X.1+X.2+X.3+X.4+X.5,data=make.data(baseline,N=N))
results[i,] = coef(test.lm)/sqrt(diag(vcov(test.lm)))
}
head(results)
apply(results,2,function(x)sum(x>qt(0.975,N-2)))
power = pt(baseline*sqrt(N)-qt(0.975,v),v) + pt(-baseline*sqrt(N)-qt(0.975,v),v)
floor(power*1000)
v
3*N/2
v = N-2
v = N-2
power = pt(baseline*sqrt(N)-qt(0.975,v),v) + pt(-baseline*sqrt(N)-qt(0.975,v),v)
floor(power*1000)
table(apply(apply(results[,2:6],1,order,decreasing=TRUE),2,paste,sep="",collapse=""))
table(apply(apply(results[,2:6],1,order,decreasing=TRUE),2,function(x)which(x==1)))
knitr::kable(cbind(simPower,expectedPower))
simPower <- apply(results,2,function(x)sum(x>qt(0.975,N-2)))
expectedPower <- c(25,floor(power*1000))
knitr::kable(cbind(simPower,expectedPower))
test.lm
library(broom)
glance(test.lm)
tidy(test.lm)
results[1000,]
tidy(test.lm)$statistic
qf(0.95,N-5)
qf(0.95,6,N-6)
results[,7]>qf(0.95,6,N-6)
set.seed(234561)
results = matrix(NA,nrow=1000,ncol=7)
for (i in 1:1000){
test.lm = lm(Y~X.1+X.2+X.3+X.4+X.5,data=make.data(baseline,N=N))
results[i,1:6] = tidy(test.lm)$statistic
results[i,7] = glance(test.lm)$statistic
}
simPower <- apply(results[,1:6],2,function(x)sum(x>qt(0.975,N-2)))
# compare to
v = N-2
power = pt(baseline*sqrt(N)-qt(0.975,v),v) + pt(-baseline*sqrt(N)-qt(0.975,v),v)
expectedPower <- c(25,floor(power*1000))
knitr::kable(cbind(simPower,expectedPower))
sum(results[,7]>qf(0.95,6,N-6))
?expand
library(dplyr)
library(tidyr)
library(broom)
m
m = 32
seq(10,2*m,5)
df <- crossing(N=seq(10,2*m,5),Rep=1:1000)
install.packages("purrr")
library(purrr)
df <- crossing(N=seq(10,2*m,5),Rep=1:1000)
head(df)
?map
1:10 %>%
map(rnorm, n = 10)
1:10 %>%
map(rnorm, n = 10) %>%
map_dbl(mean)
make.data
df <- map(df, make.data, C=baseline)
debug(make.data)
df <- map(df, make.data, C=baseline)
C
N
df <- mutate(df,
data = map(N, make.data, C=baseline))
C
N
undebug(make.data)
df <- mutate(df,
data = map(N, make.data, C=baseline))
glimpse(df)
df[["data"]][[1]]
df <- crossing(N=seq(10,2*m,5),Rep=1:1000)
df <- mutate(df,
data = map(N, make.data, C=baseline),
fullfit = map(data, function(xx)lm(Y~X.1+X.2+X.3+X.4+X.5, data=xx)))
df
df2 <- mutate(df,
statistics = map(fullfit, glance)) %>%
unnest(statistics)
head(df2)
df2 <- mutate(df,
statistics = map(fullfit, glance),
estimates = map(fullfit, tidy)) %>%
unnest(statistics)
ggplot(df2, aes(x = N, y = p.value)) + geom_violin()
library(ggplot2)
ggplot(df2, aes(x = N, y = p.value)) + geom_violin()
?geom_violin
ggplot(df2, aes(x = factor(N), y = p.value)) + geom_violin()
ggplot(df2, aes(x = factor(N), y = p.value)) + geom_boxplot()
ggplot(df2, aes(x = factor(N), y = p.value)) + geom_boxplot() + geom_hline(yintercept = 0.05)
# load necessary packages here
library(xtable)
library(dplyr)
library(tidyr)
library(broom)
library(purrr)
library(ggplot2)
